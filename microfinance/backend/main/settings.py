"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&!dv$efm9pjxe925dl8#$@c_urfypk3&@1yxrsor-!-xw^*we_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["app.tezlombard.kz", "127.0.0.1", ]
HOST_APP = "https://app.tezlombard.kz/"


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',

    'authentication',
    'profiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'authentication.User'


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

LOGIN_URL = '/'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

    'DEFAULT_MODEL_SERIALIZER_CLASS':
        'rest_framework.serializers.HyperlinkedModelSerializer',

    'PAGE_SIZE': 10,

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),

    'JWT_AUTH_HEADER_PREFIX': 'Bearer',

    'JWT_ALLOW_REFRESH': True,
}

JWT_AUTH = {
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_EXPIRATION_DELTA': datetime.timedelta(minutes=30),
}

STATIC_ROOT = os.path.join(BASE_DIR, 'statics')
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), os.path.join(BASE_DIR, 'static/ui/assets'))
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIAFILES_DIRS = (os.path.join(BASE_DIR, 'media'), )
MEDIA_URL = '/media/'

# Время жизни кода из СМС
SMS_CODE_EXPIRATION_DELTA = datetime.timedelta(seconds=90)
# Максимальное количество неудачных попыток войти в свой профиль
COUNT_FAILED_ATTEMPT = 3
# Время бана пользователя при исчерпании всех доступных попыток
BAN_TIME = datetime.timedelta(minutes=10)

# API Conf
# API_LOMBARD_LOGIN = "TezLombardTest"
API_LOMBARD_LOGIN = "TezLombardUser"
API_TEZ_CREDIT_LOGIN = "TezCreditTest"
API_HOST = "https://www.elombard.kz:53126/Api/"
# Common API
API_AUTH_SEND_SMS = f"{API_HOST}ClientAuth/SendSMS/{API_LOMBARD_LOGIN}"
API_AUTH_CONFIRM_SMS = f"{API_HOST}ClientAuth/PhoneBySMS/{API_LOMBARD_LOGIN}"
API_AUTH_PSWD = f"{API_HOST}ClientAuth/PhoneByPwd/{API_LOMBARD_LOGIN}"
API_RECOVERY_PSWD = f"{API_HOST}ClientAuth/RestorePassword/{API_LOMBARD_LOGIN}"
API_CLIENT_INFO = f"{API_HOST}Client/Info/{API_LOMBARD_LOGIN}"
API_REFRESH_EMAIL = f"{API_HOST}Client/EmailChange/{API_LOMBARD_LOGIN}"
API_REFRESH_PASSWORD = f"{API_HOST}Client/PasswordChange/{API_LOMBARD_LOGIN}"
# Tez lombard
API_PAWN_TICKET_LIST = f"{API_HOST}Lombard/LoanList/{API_LOMBARD_LOGIN}"
API_PAWN_TICKET_OPERATIONS = f"{API_HOST}Lombard/LoanOperations/{API_LOMBARD_LOGIN}"
API_PAWN_PROPERTY_LIST = f"{API_HOST}Lombard/LoanPropertyList/{API_LOMBARD_LOGIN}"
API_PAWN_PROPERTIES = f"{API_HOST}Lombard/LoanProperties/{API_LOMBARD_LOGIN}"
API_PAWN_DOCUMENTS = f"{API_HOST}Documents/GetLoanBlank/{API_LOMBARD_LOGIN}"
API_PAWN_CURRENT_OVERDRAFT = f"{API_HOST}Lombard/CurrentOverdraft/{API_LOMBARD_LOGIN}"
API_PAWN_PROLONGATION = f"{API_HOST}Lombard/CreateLoanProlongation/{API_LOMBARD_LOGIN}"
API_PAWN_PAY_BACK = f"{API_HOST}Lombard/CreateLoanPayBack/{API_LOMBARD_LOGIN}"
# Tez credit
API_CREDIT_LIST = f"{API_HOST}Lombard/LoanList/{API_TEZ_CREDIT_LOGIN}"
API_CREDIT_OPERATIONS = f"{API_HOST}Lombard/LoanOperations/{API_TEZ_CREDIT_LOGIN}"
API_CREDIT_PROPERTY_LIST = f"{API_HOST}Lombard/LoanPropertyList/{API_TEZ_CREDIT_LOGIN}"
API_CREDIT_PROPERTIES = f"{API_HOST}Lombard/LoanProperties/{API_TEZ_CREDIT_LOGIN}"
API_CREDIT_DOCUMENTS = f"{API_HOST}Documents/GetLoanBlank/{API_TEZ_CREDIT_LOGIN}"
API_CREDIT_CURRENT_OVERDRAFT = f"{API_HOST}Lombard/CurrentOverdraft/{API_TEZ_CREDIT_LOGIN}"

# processing endpoints
PAYMENT_PROCESSING_LOAN = "https://payment.processinggmbh.ch/CNPMerchantWebServices/services/CNPMerchantWebService?wsdl"
MID = "NR0000077000173"

# Памятка по значениям гет параметров returnUrl
# tl - type_loan в системе есть два типа заемов loan(тез ломбард) && credit(тез кредит)
# prd - processing_data хеш, в котором мы кодируем loan_id и другую информацию
# ref - reference_id случайным образом сконвертированный id для идентификации запроса у процессинга
# tt - type_transaction тип транзакции, в системе есть два типа транзакции pro(prolongation) && rep(repayment)
PROCESSING_RETURN_URL = HOST_APP + "?tl={}&prd={}&ref={}&tt={}"

# Публичные ошибки, которые мы можем пробрасывать на клиент
PUBLIC_ERROR_CODE = [
    3,
    5,
    8,
    9,
    15,
    17,
]

PERMISSION_DENIED_API_CODE = 4
